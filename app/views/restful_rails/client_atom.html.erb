<div id="textoCapitulo">
	<h2>Atom feeds</h2>
	<h3><a name="feed">Retrieving an atom feed</a></h3>
	
<p>You can retrieve an atom feed by accessing it as an entry point:</p>

<pre>
hotels = Restfulie.at(HOTELS_ENTRY_POINT).get
hotel = hotels[1]
puts "name: #{hotel.name}"
</pre>

<p>If the server accepts and prefers other media type than <strong>application/atom+xml</strong>, it is better to let it
know your desire to retrieve an atom feed:</p>

<pre>
hotels = Restfulie.accepts('application/atom+xml').at(HOTELS_ENTRY_POINT).get
hotel = hotels[1]
puts "name: #{hotel.name}"
</pre>

<h3><a name="feed">Working with an atom entry</a></h3>

<p>Now that you have retrieved a feed, you can use its entries as a typical Restfulie retrieved resource:</p>

<pre>
puts "#{hotel.city.name}"
hotel.related_tours.each do |tour|
	puts "Found tour '#{tour.name}'"
end
</pre>

<p>And you can fully retrieve every item due to its own link in the atom entry description:</p>

<pre>	
# retrieves the resource through GET
hotel = hotels[1].self
puts "name: #{hotel.name}"
</pre>

<h3><a name="destroy">Deleting a resource</a></h3>

<p>Now that you have a resource retrieved through an atom entry representation, you can use it's <strong>self</strong> link to remove it.</p>

<pre>
<entry>
	<id>http://localhost:3000/hotels/1</id>
	<title type="text">Hotel</title>
	<updated>2009-12-13T22:44:09-08:00</updated>
	<link rel="self" href="http://localhost:3000/hotels/1"/>
	<content type="vnd/caelum_hotel+xml">
		<hotel>
			<name>Caelum Objects Hotel</name>
		</hotel>
	</content>
</entry>
</pre>

<p>Based on the <strong>self</strong> URI, restfulie can delete it by sending a <strong>DELETE</strong> request:

<pre>
hotels = Hotel.at('http://localhost:3000/hotels').get
hotel = hotels[0]
hotel.destroy
</pre>
	
</div>
