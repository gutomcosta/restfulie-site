<div id="textoCapitulo">
	<h3>Server</h3>
<p>There are two different approaches that can be combined to create a full hypermedia aware resource based service, including awareness of its states and transitions.</p>

<h3><a name="transitions">Simple usage: transitions</a></h3>

<p>The most easy way to use restfulie is to pass a block to the *acts_as_restfulie* method.
There are three easy steps to make it work:<br/><br/>

1. Create your model (i.e. Order) with an *status* field<br/></p>

<pre>
script/generate scaffold Order status:string location:string
rake db:create
rake db:migrate
</pre>

<p>Note that with this usage the status field is optional (from 0.3.0 onwards).<br/>
<br/>
2. Add the *acts_as_restfulie* invocation with a block returning an array of possible transitions:</p>

<pre>
acts_as_restfulie do |order, transitions|
  transitions << [:show]
end
</pre>

<p>3. Update your *show* method within the *OrdersController* to show the hypermedia content:</p>

<pre>
 def show
   @order = Order.find(params[:id])
   render_resource @order
 end
</pre>

<p>You are ready to go, create a new order and save it into the database:</p>

<pre>
order = Order.new
order.location = "take away"
order.status = "unpaid"
order.save
puts "Order #{order.id} saved"
</pre>

<p>Start up the server:</p>

<pre>
script/server
</pre>

<p>And now access your server at http://localhost:3000/orders/1.xml</p>

<pre>
<%= html'<?xml version="1.0" encoding="UTF-8"?>
<order>
  <created-at>2009-11-23T00:15:15Z</created-at>
  <id>1</id>
  <location>take away</location>
  <status>unpaid</status>
  <updated-at>2009-11-23T00:15:15Z</updated-at>
  <atom:link rel="show" xmlns:atom="http://www.w3.org/2005/Atom" href="http://localhost:3000/orders/3"/>
</order>'%>
</pre>

<h3>Customizing the rel name</h3>

<p>You can also override the action used, but still keep the rel</p>

<pre>
acts_as_restfulie do |transitions|
  transitions << [:cancel, { :action => :destroy }]
end
</pre>

<p>Which will generate an hyperlink as</p>

<pre><%=html'<atom:link rel="cancel" rel="http://yourserver/orders/15" />'%></pre>

<h3>Example</h3>

<p>A full example showing all capabilities of this method follows:</p>

<pre>
acts_as_restfulie do |transitions|
  transitions << [:show]
  transitions << [:destroy] if can_cancel?
  transitions << [:pay, {:id => id}] if can_pay?
  transitions << [:show, {:controller => :payments, :payment_id => payment.id }] if paid?
end
</pre>

</div>